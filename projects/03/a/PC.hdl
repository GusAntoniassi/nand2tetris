// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    /* Se (reset || load || inc), teremos que alterar o valor do registrador */
    Or(a=load, b=reset, out=loadOrReset);
    Or(a=loadOrReset, b=inc, out=loadOrResetOrInc);
    
    /* Pegar o valor incrementado do registrador */
    Inc16(in=registerValue, out=incValue);

    /* Selecionar entre o valor incrementado, o valor de entrada ou 0 dependendo do inc, load e reset */
    Mux16(a=registerValue, b=incValue, sel=inc, out=incrementedOutput);
    Mux16(a=incrementedOutput, b=in, sel=load, out=loadedOutput);
    Mux16(a=loadedOutput, b=false, sel=reset, out=resetOutput);
    
    /* Dar a sa√≠da e armazenar os valores se for o caso */
    Register(in=resetOutput, load=loadOrResetOrInc, out=registerValue, out=out);
}
